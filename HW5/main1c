#include <iostream>
#include <vector>
#include <string>

class TicTacToe {
private:
    std::vector<std::string> board;
    char currentPlayer;
    bool gameEnd;

public:
    TicTacToe() : board(9, " "), currentPlayer('X'), gameEnd(false) {
        std::cout << "-- Tic Tac Toe -- CSIE@CGU\n";
        std::cout << "Player 1 (X) - Player 2 (O)\n";
        displayBoardNumbers(); // 輸出帶有數字的初始棋盤
    }

    void run() {
        while (!gameEnd) {
            int position;
            std::cout << "==> Player " << (currentPlayer == 'X' ? '1' : '2') << " (" << currentPlayer << "), enter a number:";
            std::cin >> position;

            if (position < 1 || position > 9 || board[position - 1] != " ") {
                std::cout << "==> Invalid value, please enter again\n";
                continue;
            }

            board[position - 1] = currentPlayer;

            displayBoard();

            if (checkWin() || checkDraw()) {
                gameEnd = true;
            } else {
                currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
            }
        }
    }

private:
    void displayBoardNumbers() {
        std::cout << " 1 | 2 | 3 \n";
        std::cout << "---+---+---\n";
        std::cout << " 4 | 5 | 6 \n";
        std::cout << "---+---+---\n";
        std::cout << " 7 | 8 | 9 \n";
    }

    void displayBoard() {
        for (int i = 0; i < 9; ++i) {
            if (board[i] == " ") {
                std::cout << " " << i + 1 << " ";
            } else {
                std::cout << " " << board[i] << " ";
            }

            if (i % 3 != 2) {
                std::cout << "|";
            } else if (i != 8) {
                std::cout << "\n---+---+---\n";
            } else {
                std::cout << "\n";
            }
        }
    }

    bool checkWin() {
        for (int i = 0; i < 3; ++i) {
            if (board[i * 3] != " " && board[i * 3] == board[i * 3 + 1] && board[i * 3] == board[i * 3 + 2]) {
                std::cout << "==> Player " << (currentPlayer == 'X' ? '1' : '2') << " wins!\n";
                return true;
            }
            if (board[i] != " " && board[i] == board[i + 3] && board[i] == board[i + 6]) {
                std::cout << "==> Player " << (currentPlayer == 'X' ? '1' : '2') << " wins!\n";
                return true;
            }
        }
        if (board[0] != " " && board[0] == board[4] && board[0] == board[8]) {
            std::cout << "==> Player " << (currentPlayer == 'X' ? '1' : '2') << " wins!\n";
            return true;
        }
        if (board[2] != " " && board[2] == board[4] && board[2] == board[6]) {
            std::cout << "==> Player " << (currentPlayer == 'X' ? '1' : '2') << " wins!\n";
            return true;
        }
        return false;
    }

    bool checkDraw() {
        for (const auto& cell : board) {
            if (cell == " ") {
                return false;
            }
        }
        std::cout << "==> Game draw\n";
        return true;
    }
};

int main() {
    TicTacToe game;
    game.run();
    return 0;
}
